<?xml version="1.0"?>
<launch>
  <arg name="use_rviz" default="true" />
  <arg name="camera_rotary" default="true" />
  <arg name="camera_top" default="false" />
  <arg name="camera_obli" default="false" />
  <arg name="log_path" default="$(find rviz_camera_stream)" />

  <!--launch rviz with config/rviz_camera_stream.rviz -->
  <node pkg="rviz" type="rviz" name="rviz"
      args="-d $(find rviz_camera_stream)/config/rviz_camera_stream.rviz"
      output="screen"
      if="$(arg use_rviz)" />

  <group if="$(arg camera_rotary)">
    <group ns="camera_rotary">
    <node name="camera_info" pkg="rostopic" type="rostopic"
        args="pub camera_info sensor_msgs/CameraInfo
      '{header: {seq: 0, stamp: {secs: 0, nsecs: 0}, frame_id: 'camera_rotary'},
        height: 1080, width: 1920, distortion_model: 'plumb_bob',
        D: [0],
        K: [1500.0, 0.0, 960, 0.0, 1500.0, 540, 0.0, 0.0, 1.0],
        R: [1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0],
        P: [1500.0, 0.0, 960, 0.0, 0.0, 1500, 540, 0.0, 0.0, 0.0, 1.0, 0.0],
        binning_x: 0, binning_y: 0,
        roi: {x_offset: 0, y_offset: 0, height: 1440, width: 2560, do_rectify: false}}' -r 2"
        output="screen"/>
    </group>

    <group ns="rviz1/camera_rotary/image">
    <rosparam param="disable_pub_plugins">
      - 'image_transport/compressed'
      - 'image_transport/compressedDepth'
      - 'image_transport/theora'
    </rosparam>
    </group>
    <node name="virtual_camera_recorder_camera_rotary" pkg="rviz_camera_stream" type="virtual_camera_recorder.py" output="screen" args="-camera_name camera_rotary -log_path $(arg log_path)"/>

  </group>

  <group if="$(arg camera_top)">
    <group ns="camera_top">
    <node name="camera_info" pkg="rostopic" type="rostopic"
        args="pub camera_info sensor_msgs/CameraInfo
      '{header: {seq: 0, stamp: {secs: 0, nsecs: 0}, frame_id: 'camera_top'},
        height: 1440, width: 2560, distortion_model: 'plumb_bob',
        D: [0],
        K: [15000.0, 0.0, 1280, 0.0, 15000.0, 720.0, 0.0, 0.0, 1.0],
        R: [1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0],
        P: [15000.0, 0.0, 1280, 0.0, 0.0, 15000, 720, 0.0, 0.0, 0.0, 1.0, 0.0],
        binning_x: 0, binning_y: 0,
        roi: {x_offset: 0, y_offset: 0, height: 1440, width: 2560, do_rectify: false}}' -r 2"
        output="screen"/>
    </group>

    <group ns="rviz1/camera_top/image">
    <rosparam param="disable_pub_plugins">
      - 'image_transport/compressed'
      - 'image_transport/compressedDepth'
      - 'image_transport/theora'
    </rosparam>
    </group>
    <node name="virtual_camera_recorder_camera_top" pkg="rviz_camera_stream" type="virtual_camera_recorder.py" output="screen" args="-camera_name camera_top -log_path $(arg log_path)"/>

  </group>

  <group if="$(arg camera_obli)">
    <group ns="camera_obli">
    <node name="camera_info" pkg="rostopic" type="rostopic"
        args="pub camera_info sensor_msgs/CameraInfo
      '{header: {seq: 0, stamp: {secs: 0, nsecs: 0}, frame_id: 'camera_obli'},
        height: 1440, width: 2560, distortion_model: 'plumb_bob',
        D: [0],
        K: [1500.0, 0.0, 1280, 0.0, 1500.0, 720.0, 0.0, 0.0, 1.0],
        R: [1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0],
        P: [1500.0, 0.0, 1280, 0.0, 0.0, 1500, 720, 0.0, 0.0, 0.0, 1.0, 0.0],
        binning_x: 0, binning_y: 0,
        roi: {x_offset: 0, y_offset: 0, height: 1440, width: 2560, do_rectify: false}}' -r 2"
        output="screen"/>
    </group>

    <group ns="rviz1/camera_obli/image">
    <rosparam param="disable_pub_plugins">
      - 'image_transport/compressed'
      - 'image_transport/compressedDepth'
      - 'image_transport/theora'
    </rosparam>
    </group>
    <node name="virtual_camera_recorder_camera_obli" pkg="rviz_camera_stream" type="virtual_camera_recorder.py" output="screen" args="-camera_name camera_obli -log_path $(arg log_path)"/>

  </group>

  <include file="$(find rviz_camera_stream)/launch/rotate_virtual_camera.launch"/>
  <include file="$(find rviz_camera_stream)/launch/s_graph_tf.launch"/>

</launch>
